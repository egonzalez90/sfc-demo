#!/bin/bash

function create_servers {
    echo "Creating SFC demo instances"
    DEMO_NET=$(openstack network list | awk '/demo-net/ { print $2 }')
    IMAGE_ID=$(openstack image list | awk '/cirros/ { print $2 }')
    openstack server create --wait --flavor m1.tiny --image $IMAGE_ID --nic net-id=$DEMO_NET kolla_sfc_server
    openstack server create --wait --flavor m1.tiny --image $IMAGE_ID --nic net-id=$DEMO_NET kolla_sfc_client

}

function sfc_gen_config {
    echo "Tacker SFC config files"
    KOLLA_SFC_CLIENT_PORT=$(openstack port list --server kolla_sfc_client | awk '/ACTIVE/ {print $2}')
    cat > ./kolla-sample-vnffgd.yaml <<EOF
tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: Sample VNFFG template

topology_template:
  description: Sample VNFFG template

  node_templates:

    Forwarding_path1:
      type: tosca.nodes.nfv.FP.Tacker
      description: creates path (CP12->CP22)
      properties:
        id: 51
        policy:
          type: ACL
          criteria:
            - network_src_port_id: ${KOLLA_SFC_CLIENT_PORT}
            - ip_proto: 1
        path:
          - forwarder: kolla-sample-vnfd
            capability: CP1

  groups:
    VNFFG1:
      type: tosca.groups.nfv.VNFFG
      description: HTTP to Corporate Net
      properties:
        vendor: tacker
        version: 1.0
        number_of_endpoints: 1
        dependent_virtual_link: [VL1]
        connection_point: [CP1]
        constituent_vnfs: [kolla-sample-vnfd]
      members: [Forwarding_path1]
EOF

}

function deploy_sfc {
    sh ./deploy-tacker-demo
    create_servers
    sfc_gen_config
    echo "Creating VNFFGD"
    tacker vnffgd-create --vnffgd-file kolla-sample-vnffgd.yaml kolla-sample-vnffgd
    echo "Creating VNFFG"
    tacker vnffg-create --vnffgd-name kolla-sample-vnffgd kolla-sample-vnffg
}

deploy_sfc
